// Package docs GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import (
	"bytes"
	"encoding/json"
	"strings"
	"text/template"

	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/orders": {
            "post": {
                "description": "Create new order",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Orders"
                ],
                "summary": "Create order",
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/orders/pay/{id}": {
            "put": {
                "description": "Pay existing order",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Orders"
                ],
                "summary": "Pay order",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Order ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/orders/search": {
            "get": {
                "description": "Full text search by title and description",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Orders"
                ],
                "summary": "Search orders",
                "parameters": [
                    {
                        "type": "string",
                        "description": "search text",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "number of elements",
                        "name": "size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/orderService.SearchRes"
                        }
                    }
                }
            }
        },
        "/orders/submit/{id}": {
            "put": {
                "description": "Submit existing order",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Orders"
                ],
                "summary": "Submit order",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Order ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/orders/{id}": {
            "get": {
                "description": "Get order by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Orders"
                ],
                "summary": "Get order",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Order ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.OrderProjection"
                        }
                    }
                }
            },
            "put": {
                "description": "Update existing order",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Orders"
                ],
                "summary": "Update order",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Order ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.OrderProjection": {
            "type": "object",
            "required": [
                "accountEmail"
            ],
            "properties": {
                "accountEmail": {
                    "type": "string"
                },
                "canceled": {
                    "type": "boolean"
                },
                "created": {
                    "type": "boolean"
                },
                "delivered": {
                    "type": "boolean"
                },
                "delivering": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "orderId": {
                    "type": "string"
                },
                "paid": {
                    "type": "boolean"
                },
                "shopItems": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ShopItem"
                    }
                },
                "submitted": {
                    "type": "boolean"
                },
                "totalPrice": {
                    "type": "number"
                }
            }
        },
        "models.ShopItem": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "quantity": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "orderService.Order": {
            "type": "object",
            "properties": {
                "AccountEmail": {
                    "type": "string"
                },
                "Canceled": {
                    "type": "boolean"
                },
                "Created": {
                    "type": "boolean"
                },
                "Delivered": {
                    "type": "boolean"
                },
                "Delivering": {
                    "type": "boolean"
                },
                "ID": {
                    "type": "string"
                },
                "Paid": {
                    "type": "boolean"
                },
                "ShopItems": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/orderService.ShopItem"
                    }
                },
                "Submitted": {
                    "type": "boolean"
                },
                "TotalPrice": {
                    "type": "number"
                }
            }
        },
        "orderService.Pagination": {
            "type": "object",
            "properties": {
                "HasMore": {
                    "type": "boolean"
                },
                "Page": {
                    "type": "integer"
                },
                "Size": {
                    "type": "integer"
                },
                "TotalCount": {
                    "type": "integer"
                },
                "TotalPages": {
                    "type": "integer"
                }
            }
        },
        "orderService.SearchRes": {
            "type": "object",
            "properties": {
                "Orders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/orderService.Order"
                    }
                },
                "Pagination": {
                    "$ref": "#/definitions/orderService.Pagination"
                }
            }
        },
        "orderService.ShopItem": {
            "type": "object",
            "properties": {
                "Description": {
                    "type": "string"
                },
                "ID": {
                    "type": "string"
                },
                "Price": {
                    "type": "number"
                },
                "Quantity": {
                    "type": "integer"
                },
                "Title": {
                    "type": "string"
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "",
	Host:        "",
	BasePath:    "",
	Schemes:     []string{},
	Title:       "",
	Description: "",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
		"escape": func(v interface{}) string {
			// escape tabs
			str := strings.Replace(v.(string), "\t", "\\t", -1)
			// replace " with \", and if that results in \\", replace that with \\\"
			str = strings.Replace(str, "\"", "\\\"", -1)
			return strings.Replace(str, "\\\\\"", "\\\\\\\"", -1)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
