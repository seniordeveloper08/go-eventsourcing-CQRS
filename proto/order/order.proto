syntax = "proto3";

package orderService;

option go_package = "./;orderService";

import "google/protobuf/timestamp.proto";


message ShopItem {
  string ID = 1;
  string Title = 2;
  string Description = 3;
  uint64 Quantity = 4;
  double Price = 5;
}

message Order {
  string ID = 1;
  repeated ShopItem ShopItems = 2;
  bool Created = 3;
  bool Paid = 4;
  bool Submitted = 5;
  bool Delivered = 6;
  bool Canceled = 7;
  double TotalPrice = 8;
  string AccountEmail = 9;
  string CancelReason = 10;
  string DeliveryAddress = 11;
  google.protobuf.Timestamp  DeliveryTimestamp = 12;
}

message CreateOrderReq {
  string AccountEmail = 1;
  repeated ShopItem ShopItems = 2;
  string DeliveryAddress = 3;
}

message CreateOrderRes {
  string AggregateID = 1;
}

message PayOrderReq {
  string AggregateID = 1;
}

message PayOrderRes {
  string AggregateID = 1;
}

message SubmitOrderReq {
  string AggregateID = 1;
}

message SubmitOrderRes {
  string AggregateID = 1;
}

message GetOrderByIDReq {
  string AggregateID = 1;
}

message GetOrderByIDRes {
  Order Order = 1;
}

message UpdateOrderReq {
  string AggregateID = 1;
  repeated ShopItem ShopItems = 2;
}

message UpdateOrderRes {}

message CancelOrderReq {
  string AggregateID = 1;
  string CancelReason = 2;
}

message CancelOrderRes {}

message DeliveryOrderReq {
  string AggregateID = 1;
  google.protobuf.Timestamp  DeliveryTimestamp = 2;
}

message DeliveryOrderRes {}

message ChangeDeliveryAddressReq {
  string AggregateID = 1;
  string DeliveryAddress = 2;
}

message ChangeDeliveryAddressRes {}

message SearchReq {
  string SearchText = 1;
  int64 Page = 2;
  int64 Size = 3;
}

message SearchRes {
  Pagination Pagination = 1;
  repeated Order Orders = 2;
}

message Pagination {
  int64 TotalCount = 1;
  int64 TotalPages = 2;
  int64 Page = 3;
  int64 Size = 4;
  bool HasMore = 5;
}

service orderService {
  rpc CreateOrder(CreateOrderReq) returns (CreateOrderRes);
  rpc PayOrder(PayOrderReq) returns (PayOrderRes);
  rpc SubmitOrder(SubmitOrderReq) returns (SubmitOrderRes);
  rpc UpdateOrder(UpdateOrderReq) returns (UpdateOrderRes);
  rpc CancelOrder(CancelOrderReq) returns (CancelOrderRes);
  rpc DeliveryOrder(DeliveryOrderReq) returns (DeliveryOrderRes);
  rpc ChangeDeliveryAddress(ChangeDeliveryAddressReq) returns (ChangeDeliveryAddressRes);
  rpc GetOrderByID(GetOrderByIDReq) returns (GetOrderByIDRes);
  rpc Search(SearchReq) returns (SearchRes);
}